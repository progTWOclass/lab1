Q1
a)

first iteration
sum = 0;
i = 1; 
sum = sum + data[i] - data[i-1] --> sum = sum + data[1] - data[1-1]
here we start at 1 but because of data[i-1], we always have the bigger number minus the smaller number in a sorted array
0 = 0 + 3 - 1
therefore, sum = 2

second iteration
sum = 2;
i = 2; 
sum = sum + data[i] - data[i-1] --> sum = sum + data[2] - data[2-1]
2 = 2 + 5 - 3
therefore sum = 4

third iteration
sum = 4;
i = 3; 
sum = sum + data[i] - data[i-1] --> sum = sum + data[3] - data[3-1]
4 = 4 + 8 - 5
therefore sum = 7

fourth iteration
sum = 7;
i = 4; 
sum = sum + data[i] - data[i-1] --> sum = sum + data[4] - data[4-1]
7 = 7 + 11 - 8
therefore sum = 10

fifth iteration (last iteration)
sum = 10;
i = 5; 
sum = sum + data[i] - data[i-1] --> sum = sum + data[5] - data[5-1]
10 = 10 + 15 - 11
therefore sum = 14

b)

first iteration
i = 0;
a[i] --> a[0] = 5, 
a[i] == 0 --> 5 == 0 --> not true therefore no exit loop

i % 3 == 0 --> 0 % 3 == 0 --> true therefore skip to the next iteration

second iteration
i = 1;
a[i] --> a[1] = 2, 
a[i] == 0 --> 2 == 0 --> not true therefore no exit loop

i % 3 == 0 --> 1 % 3 == 0 --> not true therefore prints element of 2

third iteration
i = 2;
a[i] --> a[2] = 3, 
a[i] == 0 --> 3 == 0 --> not true therefore no exit loop

i % 3 == 0 --> 2 % 3 == 0 --> not true therefore prints element of 3

fourth iteration
i = 3;
a[i] --> a[3] = 1, 
a[i] == 0 --> 1 == 0 --> not true therefore no exit loop

i % 3 == 0 --> 3 % 3 == 0 --> true therefore skips to next iteration

fifth iteration
i = 4;
a[i] --> a[4] = 1, 
a[i] == 0 --> 1 == 0 --> not true therefore no exit loop

i % 3 == 0 --> 4 % 3 == 0 --> not true there prints element of 1

sixth iteration
i = 5;
a[i] --> a[5] = 0, 
a[i] == 0 --> 0 == 0 --> true therefore exit loop

so the output of the code is, 
231


Q2
a)
int[] array = {-10,-10,-10,-10,-10,-10,-10,-10,-10,-10};

b)
int[] values = new int[20];
for(int i = 0; i < values.length; i++){
    values[i] = values[i]+1;
    System.out.println(values[i]);
}

c)
